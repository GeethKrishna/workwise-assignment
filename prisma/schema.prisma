generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model courses {
  id          String     @id
  name        String
  code        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  avatar      String?
  students    students[] @relation("StudentCourses")
}

model students {
  id         String        @id
  name       String
  email      String        @unique
  cohort     String
  dateJoined DateTime      @default(now())
  lastLogin  DateTime?     @default(now())
  status     StudentStatus
  createdAt  DateTime      @default(now())
  updatedAt  DateTime
  courses    courses[]     @relation("StudentCourses")
}

model users {
  id        String   @id
  email     String   @unique
  firstName String?
  lastName  String?
  avatar    String?
  theme     Theme    @default(light)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

enum StudentStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  GRADUATED
}

enum Theme {
  light
  dark
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  seats     Seat[]
  createdAt DateTime @default(now())
}

model Seat {
  id        Int      @id @default(autoincrement())
  seatNumber Int     @unique
  isBooked  Boolean  @default(false)
  bookingId Int?
  booking   Booking? @relation(fields: [bookingId], references: [id])
}
